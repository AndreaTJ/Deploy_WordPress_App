- hosts: localhost
  connection: local
  tasks:
  - name: "generate key pair"
    openssh_keypair:
      path: ~/.ssh/ansible_id_rsa
      state: present
  - name: "create key pair using key_material obtained using 'file' lookup plugin"
    ec2_key:
      name: CloudFormationKeyPair
      key_material: "{{ lookup('file', '~/.ssh/ansible_id_rsa.pub') }}"
      state: present
  - name: "create a simple stack"
    cloudformation:
      state: present
      stack_name: test-stack
      region: eu-west-2
      template: stack.yaml
  - cloudformation_info:
      stack_name: test-stack
      stack_resources: true
    register: output
  - ec2_instance_info:
      instance_ids: "{{ output['cloudformation']['test-stack']['stack_resource_list'] | json_query(query) }}"
    vars:
      query: "[?ResourceType=='AWS::EC2::Instance'].PhysicalResourceId"
    register: ec2
  - debug:
      var: ec2
  - set_fact:
      ec2_instances: "{{ ec2['instances']| map(attribute='public_dns_name') | list }}"
  - name: "build inventory"
    add_host:
      name: "{{ item }}"
      ansible_user: ec2-user
      ansible_ssh_private_key_file: ~/.ssh/ansible_id_rsa
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=60'
    with_items: "{{ ec2_instances }}"
- hosts: all
  become: true
  gather_facts: no
  tasks:
  - name: "Wait for system to become reachable"
    wait_for_connection:
  - name: "Gather facts for first time"
    setup:
  - name: "Install dependencies"
    yum:
      name:
      - ruby
      - git
      - tree
      state: latest
      update_cache: yes

  - name: Download CodeDeploy Agent
    get_url:
      url: "https://aws-codedeploy-eu-west-2.s3.eu-west-2.amazonaws.com/latest/install"
      dest: /tmp/codedeploy-install
      mode: 0755

  - name: Codedeploy Install
    become: true
    shell: /tmp/codedeploy-install auto
